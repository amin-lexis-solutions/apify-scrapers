name: Conditional Apify Actor Deployment

on:
  push:
    paths:
      - 'packages/**'
      - 'scripts/**'

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      rebuild-all: ${{ steps.determine-rebuild.outputs.rebuild-all }}
    steps:
      - uses: actions/checkout@v3

      - name: Determine if rebuild is needed
        id: determine-rebuild
        run: |
          if [[ "${{ github.event.before }}" == "0000000000000000000000000000000000000000" || "${{ github.event.commits[0].message }}" == *"initial commit"* ]]; then
            echo "This is the first commit or a new branch."
            echo "rebuild-all=true" >> $GITHUB_ENV
          elif git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q 'packages/shared'; then
            echo "Changes detected in shared directory."
            echo "rebuild-all=true" >> $GITHUB_ENV
          else
            echo "No changes detected in shared directory."
            echo "rebuild-all=false" >> $GITHUB_ENV
          fi

  deploy-actors:
    needs: check-changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      - name: Install dependencies
        run: yarn install
      - name: Install Apify CLI
        run: npm install -g apify-cli
      - name: Authenticate with Apify using API token
        env:
          APIFY_TOKEN: ${{ secrets.APIFY_TOKEN }}
        run: apify login --token $APIFY_TOKEN
      - name: Deploy actors based on changes
        env:
          APIFY_TOKEN: ${{ secrets.APIFY_TOKEN }}
        run: |
          REBUILD_ALL="${{ needs.check-changes.outputs.rebuild-all }}"
          for dir in packages/*; do
            if [[ -d "$dir" && "$dir" != "packages/api" && "$dir" != "packages/shared" ]]; then
              ACTOR_NAME=$(basename "$dir")
              MAIN_TS="$dir/src/main.ts"
              if [ "$REBUILD_ALL" == "true" ] || [ -f "$MAIN_TS" ]; then
                TYPE="puppeteer" # Default type
                if grep -q "prepareCheerioScraper" "$MAIN_TS"; then
                  TYPE="cheerio"
                fi
                echo "Deploying $ACTOR_NAME with $TYPE"
                ./scripts/deploy-apify.js "$ACTOR_NAME" "$TYPE"
              else
                echo "$MAIN_TS does not exist, skipping $ACTOR_NAME"
              fi
            fi
          done
        shell: bash
